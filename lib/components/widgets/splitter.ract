<style>
    .splitter {
        box-sizing: border-box;
        -moz-box-sizing: border-box;
        position: absolute;
        top:0;
        right:0;
        bottom:0;
        left:0;
    }

    .splitter-inner {
       position: absolute;
       left: 0;
       right: 0;
        top:0;
        bottom:0;
    }
    .splitter-inner.horizontal {
      left: 4px;
      right: 4px;
    }

    .splitter-inner.vertical {
       top: 4px;
        bottom: 4px;
    }

</style>

<div class="splitter">
    <div class="splitter-inner {{type}}" on-mousemove="splitter-move" on-mouseup="splitter-end-move">
    {{>content}}
    </div>
</div>

<script>
    component.exports = {
        init: function() {
            console.log(this.findAllComponents());
            var type = this.get("type");
            var horizontal = (type == "horizontal");
            var panels = this.findAllComponents("splitter-panel");
            panels[0].set("type", horizontal ? "left" : "top");
            panels[1].set("type", horizontal ? "right" : "bottom");

            var splitter = this.findComponent("splitter-handle");
            var self = this;
            splitter.on("splitter-begin-move", function(event) {
                self.set('dragging',true);
                $('body').css({ '-webkit-user-select': 'none',
                    '-moz-user-select': '-moz-none',
                    '-ms-user-select': 'none',
                    'user-select': 'none'
                } );

                //find all iframes and disable pointer events
                $('iframe').each(function(idx,el) {
                    el.style['pointer-events'] = 'none';
                })


            });

            this.on("splitter-move", function(event) {
                if (!this.get('dragging')) return;
                var container = $(this.find(".splitter-inner"));
                var offsetTop = container.offset().top;
                var offsetLeft = container.offset().left;

                if (horizontal) {
                    this.set('location',((event.original.pageX - offsetLeft) /container.outerWidth()) *100);
                } else {
                    this.set('location',((event.original.pageY - offsetTop ) /container.outerHeight()) *100);
                }
            });

            this.on("splitter-end-move", function(event) {
                this.set('dragging', false);
                $('body').css({ '-webkit-user-select': 'initial',
                    '-moz-user-select': 'initial',
                    '-ms-user-select': 'initial',
                    'user-select': 'initial'
                });
                this.fire("resize");
                $('iframe').each(function(idx, el) {
                    el.style['pointer-events'] = 'auto';
                })
            });
        },
        data: {
            location: 35,
            dragging: false,
            type: "horizontal"
        }


    }

</script>